<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ultronxr.qqrobot.bean.mybatis.mapper.QQGroupMemberChatMapper">
  <resultMap id="BaseResultMap" type="cn.ultronxr.qqrobot.bean.mybatis.bean.QQGroupMemberChat">
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="chat_time" jdbcType="VARCHAR" property="chatTime" />
    <result column="chat_num" jdbcType="INTEGER" property="chatNum" />
    <result column="is_statistic" jdbcType="INTEGER" property="isStatistic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    group_id, member_id, chat_time, chat_num, is_statistic
  </sql>
  <select id="selectByExample" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QQGroupMemberChatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qq_group_member_chat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QQGroupMemberChatExample">
    delete from qq_group_member_chat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QQGroupMemberChat">
    insert into qq_group_member_chat (group_id, member_id, chat_time, 
      chat_num, is_statistic)
    values (#{groupId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, #{chatTime,jdbcType=VARCHAR}, 
      #{chatNum,jdbcType=INTEGER}, #{isStatistic,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QQGroupMemberChat">
    insert into qq_group_member_chat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="chatTime != null">
        chat_time,
      </if>
      <if test="chatNum != null">
        chat_num,
      </if>
      <if test="isStatistic != null">
        is_statistic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="chatTime != null">
        #{chatTime,jdbcType=VARCHAR},
      </if>
      <if test="chatNum != null">
        #{chatNum,jdbcType=INTEGER},
      </if>
      <if test="isStatistic != null">
        #{isStatistic,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QQGroupMemberChatExample" resultType="java.lang.Long">
    select count(*) from qq_group_member_chat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update qq_group_member_chat
    <set>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.chatTime != null">
        chat_time = #{record.chatTime,jdbcType=VARCHAR},
      </if>
      <if test="record.chatNum != null">
        chat_num = #{record.chatNum,jdbcType=INTEGER},
      </if>
      <if test="record.isStatistic != null">
        is_statistic = #{record.isStatistic,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update qq_group_member_chat
    set group_id = #{record.groupId,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      chat_time = #{record.chatTime,jdbcType=VARCHAR},
      chat_num = #{record.chatNum,jdbcType=INTEGER},
      is_statistic = #{record.isStatistic,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <resultMap id="ChatSumResultMap" type="cn.ultronxr.qqrobot.bean.mybatis.bean.ChatSum">
    <result column="chat_sum" jdbcType="INTEGER" property="chatSum" />
  </resultMap>

  <resultMap id="GroupIdAndChatSumResultMap" type="cn.ultronxr.qqrobot.bean.mybatis.bean.GroupIdAndChatSum">
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="chat_sum" jdbcType="INTEGER" property="chatSum" />
  </resultMap>

  <resultMap id="MemberIdAndChatSumResultMap" type="cn.ultronxr.qqrobot.bean.mybatis.bean.MemberIdAndChatSum">
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="chat_sum" jdbcType="INTEGER" property="chatSum" />
  </resultMap>


  <!-- 统计 某段时间内 <b>某个群<b/> 的活跃程度 -->
  <select id="statisticsGroup" parameterType="java.lang.String" resultMap="ChatSumResultMap">
    select
        sum(chat_num) chat_sum
    from
        qq_group_member_chat
    where
        group_id = #{groupId,jdbcType=VARCHAR}
        and chat_time > #{startTime,jdbcType=VARCHAR}
        and chat_time <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
        and is_statistic = 1
    ;
  </select>

  <!-- 统计 某段时间内 <b>所有群<b/> 的活跃程度/排名 -->
  <select id="statisticsAllGroup" parameterType="java.lang.String" resultMap="GroupIdAndChatSumResultMap">
    select
        group_id, sum(chat_num) chat_sum
    from
        qq_group_member_chat
    where
        chat_time > #{startTime,jdbcType=VARCHAR}
        and chat_time <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
        and is_statistic = 1
    group by
        group_id
    order by
        chat_sum desc
    ;
  </select>

  <!-- 统计 某段时间内 某个群的<b>某位群成员<b/> 的活跃程度 -->
  <select id="statisticsGroupMember" parameterType="java.lang.String" resultMap="ChatSumResultMap">
    select
        sum(chat_num) chat_sum
    from
        qq_group_member_chat
    where
        group_id = #{groupId,jdbcType=VARCHAR}
        and member_id = #{memberId,jdbcType=VARCHAR}
        and chat_time > #{startTime,jdbcType=VARCHAR}
        and chat_time <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
        and is_statistic = 1
    ;
  </select>

  <!-- 统计 某段时间内 某个群的<b>所有群成员<b/> 的活跃程度/排名 -->
  <select id="statisticsGroupAllMember" parameterType="java.lang.String" resultMap="MemberIdAndChatSumResultMap">
    select
        member_id, sum(chat_num) chat_sum
    from
        qq_group_member_chat
    where
        group_id =  #{groupId,jdbcType=VARCHAR}
        and chat_time > #{startTime,jdbcType=VARCHAR}
        and chat_time <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
        and is_statistic = 1
    group by
        member_id
    order by
        chat_sum desc
    ;
  </select>

</mapper>