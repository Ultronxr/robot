<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ultronxr.qqrobot.bean.mybatis.mapper.QuartzTaskMapper">
  <resultMap id="BaseResultMap" type="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTask">
    <id column="task_name" jdbcType="VARCHAR" property="taskName" />
    <id column="task_group" jdbcType="VARCHAR" property="taskGroup" />
    <result column="task_description" jdbcType="VARCHAR" property="taskDescription" />
    <result column="task_class" jdbcType="VARCHAR" property="taskClass" />
    <result column="task_cron" jdbcType="VARCHAR" property="taskCron" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pause_time_limit" jdbcType="TIMESTAMP" property="pauseTimeLimit" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_name, task_group, task_description, task_class, task_cron, status, pause_time_limit, 
    create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from quartz_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTaskKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from quartz_task
    where task_name = #{taskName,jdbcType=VARCHAR}
      and task_group = #{taskGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTaskKey">
    delete from quartz_task
    where task_name = #{taskName,jdbcType=VARCHAR}
      and task_group = #{taskGroup,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTaskExample">
    delete from quartz_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTask">
    insert into quartz_task (task_name, task_group, task_description, 
      task_class, task_cron, status, 
      pause_time_limit, create_user, create_time, 
      update_user, update_time)
    values (#{taskName,jdbcType=VARCHAR}, #{taskGroup,jdbcType=VARCHAR}, #{taskDescription,jdbcType=VARCHAR}, 
      #{taskClass,jdbcType=VARCHAR}, #{taskCron,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{pauseTimeLimit,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTask">
    insert into quartz_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskName != null">
        task_name,
      </if>
      <if test="taskGroup != null">
        task_group,
      </if>
      <if test="taskDescription != null">
        task_description,
      </if>
      <if test="taskClass != null">
        task_class,
      </if>
      <if test="taskCron != null">
        task_cron,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="pauseTimeLimit != null">
        pause_time_limit,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskGroup != null">
        #{taskGroup,jdbcType=VARCHAR},
      </if>
      <if test="taskDescription != null">
        #{taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="taskClass != null">
        #{taskClass,jdbcType=VARCHAR},
      </if>
      <if test="taskCron != null">
        #{taskCron,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="pauseTimeLimit != null">
        #{pauseTimeLimit,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTaskExample" resultType="java.lang.Long">
    select count(*) from quartz_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update quartz_task
    <set>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskGroup != null">
        task_group = #{record.taskGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.taskDescription != null">
        task_description = #{record.taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.taskClass != null">
        task_class = #{record.taskClass,jdbcType=VARCHAR},
      </if>
      <if test="record.taskCron != null">
        task_cron = #{record.taskCron,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.pauseTimeLimit != null">
        pause_time_limit = #{record.pauseTimeLimit,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update quartz_task
    set task_name = #{record.taskName,jdbcType=VARCHAR},
      task_group = #{record.taskGroup,jdbcType=VARCHAR},
      task_description = #{record.taskDescription,jdbcType=VARCHAR},
      task_class = #{record.taskClass,jdbcType=VARCHAR},
      task_cron = #{record.taskCron,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      pause_time_limit = #{record.pauseTimeLimit,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTask">
    update quartz_task
    <set>
      <if test="taskDescription != null">
        task_description = #{taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="taskClass != null">
        task_class = #{taskClass,jdbcType=VARCHAR},
      </if>
      <if test="taskCron != null">
        task_cron = #{taskCron,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="pauseTimeLimit != null">
        pause_time_limit = #{pauseTimeLimit,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where task_name = #{taskName,jdbcType=VARCHAR}
      and task_group = #{taskGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ultronxr.qqrobot.bean.mybatis.bean.QuartzTask">
    update quartz_task
    set task_description = #{taskDescription,jdbcType=VARCHAR},
      task_class = #{taskClass,jdbcType=VARCHAR},
      task_cron = #{taskCron,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      pause_time_limit = #{pauseTimeLimit,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where task_name = #{taskName,jdbcType=VARCHAR}
      and task_group = #{taskGroup,jdbcType=VARCHAR}
  </update>
</mapper>